<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">
<context:component-scan base-package="com.javaapi.test.spring.aop.aspectj" />
	<bean id="logAspectBefore" class="com.javaapi.test.spring.aop.aspectj.xml2.LoggingAspectBefore" />
	<bean id="logAspectAfter" class="com.javaapi.test.spring.aop.aspectj.xml2.LoggingAspectAfter" />
	<aop:config>
		<aop:aspect id="aspectBeforeLoggging" ref="logAspectBefore">
			<aop:pointcut id="pointCutBefore"
				expression="execution(* com.javaapi.test.spring.aop.aspectj.CustomerBo.addCustomer(..))" />
			<aop:before method="logBefore" pointcut-ref="pointCutBefore" />
		</aop:aspect>
	</aop:config>
	<aop:config>
		<aop:aspect id="aspectAfterLoggging" ref="logAspectAfter">
			<aop:pointcut id="pointCutAfter"
				expression="execution(* com.javaapi.test.spring.aop.aspectj.CustomerBo.addCustomer(..))" />
			<aop:after method="logAfter" pointcut-ref="pointCutAfter" />
		</aop:aspect>
	</aop:config>
</beans>