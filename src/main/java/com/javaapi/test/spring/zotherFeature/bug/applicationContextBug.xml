<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">

    <context:component-scan base-package="com.javaapi.test.spring.zotherFeature.bug"/>
    <bean id="greetingAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="advice" ref="greetingAroundAdvice"/>            <!-- 增强 -->
        <property name="pattern" value="com.javaapi.test.spring.zotherFeature.bug.GreetingImpl.good.*"/> <!-- 切点（正则表达式） -->
    </bean>
    <bean  id="userClient" class="com.javaapi.test.spring.zotherFeature.bug.UserClient" >
    	<property name="greeting" ref="greetingProxy" />
    </bean>
<!--       <bean  id="userClient" class="com.javaapi.test.spring.zotherFeature.bug.UserClient" depends-on="greetingProxy"> -->
<!--     	<property name="greeting" ref="greetingProxy" /> -->
<!--     </bean> -->
    <!-- 配置代理后，如果将代理设置为 prototype,会找不到 -->
    <bean id="greetingProxy" class="org.springframework.aop.framework.ProxyFactoryBean" scope="prototype">
        <property name="target" ref="greetingImpl"/>                <!-- 目标类 -->
        <property name="interceptorNames" value="greetingAdvisor"/> <!-- 切面 -->
        <property name="proxyTargetClass" value="true"/>            <!-- 代理目标类 -->
    </bean>
</beans>