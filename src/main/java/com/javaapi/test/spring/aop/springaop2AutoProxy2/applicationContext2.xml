<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd"
       default-lazy-init="true">

    <context:component-scan base-package="com.javaapi.test.spring.aop.springaop2AutoProxy2"/>
    
      <bean id="greetingAdvisor2" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="pattern" value="com.javaapi.test.spring.aop.springaop2AutoProxy2.*Impl.good.*"/>
        <property name="advice" ref="greetingAroundAdvice2"/>
    </bean>
    
     <bean id="greetingAdvisor" class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
        <property name="pattern" value="com.javaapi.test.spring.aop.springaop2AutoProxy2.*Impl.good.*"/>
        <property name="advice" ref="greetingAroundAdvice"/>
    </bean>
   
<!--     可以自动生成代理,并且可以拦截指定方法 -->
<!--     这里无需再配置代理了，因为代理将会由 DefaultAdvisorAutoProxyCreator 自动生成。也就是说，这个类可以扫描所有的切面类，并为其自动生成代理 -->
<!-- 	AbstractAutowireCapableBeanFactory 会回调 DefaultAdvisorAutoProxyCreator  得 getAdvicesAndAdvisorsForBean方法,达到自动处理的原理 -->
<!-- 只要advisor的pattern符合条件,都会生效.生效得顺序跟advisor在spring,xml中配置的顺序有关 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <property name="optimize" value="true"/>
    </bean>


    <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
        <property name="beanNames" value="*Impl"/>                       <!-- 只为后缀是“Impl”的 Bean 生成代理 -->
        <property name="interceptorNames" value="greetingAroundAdvice3"/> <!-- 增强 -->
        <property name="optimize" value="true"/>                         <!-- 是否对代理生成策略进行优化 -->
    </bean>
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!--<aop:aspectj-autoproxy proxy-target-class="false"/>-->


</beans>