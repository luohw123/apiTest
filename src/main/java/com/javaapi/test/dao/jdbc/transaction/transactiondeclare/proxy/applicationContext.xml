<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd" default-lazy-init="true">
<!--  只有一个扫描也是支持spring注解的 -->
 <context:component-scan base-package="com.javaapi.test.dao.jdbc.transaction.transactiondeclare.proxy"/>
<!-- 注意一个xml中写 " & "  需要 抓换成"&amp" 符号的问题 @see http://hi.baidu.com/zhy65991/item/b316bf2eb4d30ecbdcf69ad0 -->
<bean id="dataSource"
class="org.apache.commons.dbcp.BasicDataSource"
destroy-method="close"
        p:driverClassName="com.mysql.jdbc.Driver"
        p:url="jdbc:mysql://127.0.0.1:3306/csc_sns_dev?zeroDateTimeBehavior=convertToNull&amp;useUnicode=true&amp;characterEncoding=GBK"
        p:username="root"
        p:password="root"/>
        
 <bean id="txManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id="transactionProxyParent"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="txManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="save*">
					PROPAGATION_REQUIRED,
					ISOLATION_READ_COMMITTED,
					timeout_10,
					-Exception,
					+NoRollBackException
				</prop>
				<prop key="*">
					PROPAGATION_REQUIRED,
					ISOLATION_READ_COMMITTED
				</prop>
			</props>
		</property>
	</bean>
<!-- 	如果这样子，每个service都要配置,那样会很冗余 -->
<!-- 	<bean id="proxyInsertService" parent="transactionProxyParent"> -->
<!-- 		<property name="target" ref="targetInsertService" /> -->
<!-- 	</bean>   -->
	<bean id="proxyUpdateService" parent="transactionProxyParent">
		<property name="target" ref="targetUpdateService" />
	</bean>  
</beans>